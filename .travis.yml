language: rust

before_install:
  - set -e
  - export SCCACHE_CACHE_SIZE=200M
  - export SCCACHE_DIR="$TRAVIS_HOME/.cache/sccache"
  - mkdir "$TRAVIS_HOME/.bin"
  - wget https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
  - tar -C "$TRAVIS_HOME/.bin" -xvf sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
  - mv $TRAVIS_HOME/.bin/sccache-0.2.13-x86_64-unknown-linux-musl/sccache $TRAVIS_HOME/.bin/sccache
  - export PATH="$PATH:$TRAVIS_HOME/.bin"
  - export RUSTC_WRAPPER="sccache"

cache:
  directories:
    - $TRAVIS_HOME/.cache/sccache
    - $TRAVIS_HOME/.cargo

# See https://levans.fr/rust_travis_cache.html
before_cache:
  - rm -rf "$TRAVIS_HOME/.cargo/registry"

after_script:
  - (sccache -s||true)
  - set +e

matrix:
  fast_finish: true
  include:
    - rust: stable
      install:
        - rustup component add rustfmt
      script:
        - cargo fmt -- --check
        - travis_wait 40 cargo build --all --tests
        - cargo test --all -- --skip dpc --skip integration_test
        - cargo check --examples --all
        - cargo check --all-features --examples --all

    - rust: nightly
      script:
        - travis_wait 40 cargo build --all --tests
        - cargo test --all -- --skip dpc --skip integration_test
        - cargo check --examples --all --benches
        - cargo check --all-features --examples --all --benches

    - rust: stable
      install:
        - rustup target add thumbv6m-none-eabi
      env: RUSTFLAGS='-C target-cpu=cortex-a7'
      after_script:
        - set +e
      script:
        # test algebra-core
        - cd algebra-core
        - cargo build -p algebra-core --no-default-features --target thumbv6m-none-eabi
        - cargo check --examples -p algebra-core --no-default-features --target thumbv6m-none-eabi
        - cd ..
        # test algebra
        - cd algebra
        - cargo build -p algebra --no-default-features --features "full" --target thumbv6m-none-eabi
        - cargo check --examples -p algebra --no-default-features --features "full" --target thumbv6m-none-eabi
        - cd ..
        # test r1cs-core
        - cd r1cs-core
        - cargo build -p r1cs-core --no-default-features --target thumbv6m-none-eabi
        - cargo check --examples -p r1cs-core --no-default-features --target thumbv6m-none-eabi
        - cd ..
        # test r1cs-std
        - cd r1cs-std
        - cargo build -p r1cs-std --no-default-features --features "full" --target thumbv6m-none-eabi
        - cargo check --examples -p r1cs-std --no-default-features --features "full" --target thumbv6m-none-eabi
        - cd ..
        # test ff-fft
        - cd ff-fft
        - cargo build -p ff-fft --no-default-features --target thumbv6m-none-eabi
        - cargo check --examples -p ff-fft --no-default-features --target thumbv6m-none-eabi
        - cd ..
        # test groth16
        - cd groth16
        - cargo build -p groth16 --no-default-features --target thumbv6m-none-eabi
        - cargo check --examples -p groth16 --no-default-features --target thumbv6m-none-eabi
        - cd ..
        # test gm17
        - cd gm17
        - cargo build -p gm17 --no-default-features --target thumbv6m-none-eabi
        - cargo check --examples -p gm17 --no-default-features --target thumbv6m-none-eabi
        - cd ..
        # test crypto-primitives
        - cd crypto-primitives
        - cargo build -p crypto-primitives --no-default-features --features "r1cs" --target thumbv6m-none-eabi
        - cargo check --examples -p crypto-primitives --no-default-features --features "r1cs" --target thumbv6m-none-eabi
        - cd ..

script:
  - echo "script!"
