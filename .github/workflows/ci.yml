name: CI
on:
  pull_request:
  push:
    branches:
      - master
env:
  RUST_BACKTRACE: 1

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt

    - name: cargo fmt --check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check examples
        uses: actions-rs/cargo@v1
        with:
            command: check
            args: --examples --workspace

      - name: Check examples with all features on stable
        uses: actions-rs/cargo@v1
        with:
            command: check
            args: --examples --all-features --workspace
        if: matrix.rust == 'stable'

      - name: Check benchmarks on nightly
        uses: actions-rs/cargo@v1
        with:
            command: check
            args: --all-features --examples --workspace --benches
        if: matrix.rust == 'nightly'

      - name: Test
        uses: actions-rs/cargo@v1
        with:
            command: test
            args: "--workspace \
                   --all-features"

  check_no_std:
    name: Check no_std
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-none
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
            command: check
            args: --examples --workspace --target aarch64-unknown-none

      - name: Build
        uses: actions-rs/cargo@v1
        with:
            command: build
            args: --workspace --target aarch64-unknown-none
